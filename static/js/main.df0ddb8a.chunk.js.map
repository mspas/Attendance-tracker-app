{"version":3,"sources":["services/api.mock.service.js","services/auth.service.js","components/Home/Sign-in.js","components/Home/Home.js","actions/index.js","components/Dashboard/Sidebar.js","components/Dashboard/LecturePresence.js","components/Dashboard/PresenceSummary.js","components/Dashboard/CourseView.js","components/Dashboard/WeekSchedule.js","services/data.service.js","components/Dashboard/Dashboard.js","components/Dashboard/Dashboard.container.js","services/auth-guard.service.js","App.js","serviceWorker.js","reducers/course.js","reducers/lecture.js","reducers/isLogged.js","reducers/index.js","index.js"],"names":["coursesDetails","courseId","courseCode","lecturesAmount","students","name","email","indeks","presences","coursesSummary","student","lecturersCourses","lecturerId","courses","id","lectures","date","lecturersSchedule","schedule","day","course","code","lecturerName","building","room","time","duration","lecturesDetails","lectureId","lecturer","ApiServiceMock","this","getExampleToken","bind","getCoursesDetails","getCoursesSummary","getLecturersCourses","getLecturersSchedule","getLecturesDetails","Promise","resolve","AuthService","domain","_apiMock","fetch","login","getUserId","getName","getEmail","password","setToken","getToken","token","decode","exp","Date","now","err","localStorage","setItem","getItem","sub","logged","removeItem","url","options","headers","loggedIn","then","_checkStatus","response","json","status","error","Error","statusText","alert","SignIn","props","handleInputChange","event","target","value","setState","onSubmit","preventDefault","_auth","state","Email","Password","res","history","replace","catch","Form","className","Group","controlId","InputGroup","Prepend","Text","icon","faEnvelope","Control","type","placeholder","aria-describedby","onChange","required","Feedback","faLock","Button","variant","React","Component","Home","toggleClass","active","currentState","Container","Sidebar","activeFlags","sidebarHidden","onCourseClick","onScheduleClick","slideSidebar","length","setDefaultFlags","prevProps","prevState","reject","temp","i","push","index","data","setActiveFlag","changeCourse","eraseLecture","eraseCourse","document","getElementById","style","left","isLoading","Spinner","animation","role","map","key","to","onClick","loggedName","faTimesCircle","faBars","LecturePresence","handleExportToPDF","onMarkPresenceClick","presenceData","input","html2canvas","canvas","imgData","toDataURL","pdf","jsPDF","orientation","addImage","save","courseName","courseData","lectureIndex","isPresent","faCheck","table","filename","sheet","buttonText","Table","responsive","bordered","hover","PresenceSummary","dummyLectures","studentPresences","overviewData","lect","CourseView","courseOverviewClicked","isLoadingOverview","presenceLoading","onBackClick","onLectureClick","onOverviewClick","onLectureClickMockup","onOverviewClickMockup","dateT","dateS","getDate","slice","getMonth","getFullYear","hour","getHours","getMinutes","changeLecture","colors","WeekSchedule","hours","hoursD","scheduleData","forEach","tempDate","blockId","block","startMinutesDiff","top","height","background","Math","floor","random","endHourTemp","minutes","endHour","ceil","innerHTML","lecHour","days","hoursList","hourS","isLecture","monthNames","dayNames","DataService","getMonthName","getDayName","Dashboard","_data","lecturer_id","lecturesLoading","coursesLoading","scheduleLoading","dateString","handleLogoutClick","handleLecturesForCourse","getDataInitMockup","handleLecturesForCourseMockup","logout","course_id","lecturesSet","getLecturesSet","method","console","log","JSON","stringify","date1","date2","mapDispatchToProps","payload","withAuth","AuthComponent","user","profile","connect","App","basename","path","component","exact","Boolean","window","location","hostname","match","courseReducer","action","lectureReducer","loggedReducer","rootReducer","combineReducers","islogged","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"qjBAQMA,EAAiB,CACrBC,SAAU,EACVC,WAAY,UACZC,eAAgB,EAChBC,SAAU,CACR,CACEC,KAAM,mBACNC,MAAO,6BACPC,OAAQ,OACRC,UAAW,GAEb,CACEH,KAAM,iBACNC,MAAO,6BACPC,OAAQ,OACRC,UAAW,GAEb,CACEH,KAAM,iBACNC,MAAO,6BACPC,OAAQ,OACRC,UAAW,GAEb,CACEH,KAAM,2BACNC,MAAO,6BACPC,OAAQ,OACRC,UAAW,GAEb,CACEH,KAAM,qBACNC,MAAO,6BACPC,OAAQ,OACRC,UAAW,GAEb,CACEH,KAAM,wCACNC,MAAO,6BACPC,OAAQ,OACRC,UAAW,GAEb,CACEH,KAAM,eACNC,MAAO,6BACPC,OAAQ,OACRC,UAAW,KAKXC,EAAiB,CACrBR,SAAU,EACVC,WAAY,UACZE,SAAU,CACR,CACEM,QAAS,CACPL,KAAM,mBACNC,MAAO,6BACPC,OAAQ,QAEVC,UAAW,IAEb,CACEE,QAAS,CACPL,KAAM,iBACNC,MAAO,6BACPC,OAAQ,QAEVC,UAAW,CAAC,EAAG,EAAG,EAAG,IAEvB,CACEE,QAAS,CACPL,KAAM,iBACNC,MAAO,6BACPC,OAAQ,QAEVC,UAAW,CAAC,EAAG,EAAG,EAAG,IAEvB,CACEE,QAAS,CACPL,KAAM,2BACNC,MAAO,6BACPC,OAAQ,QAEVC,UAAW,CAAC,EAAG,EAAG,IAEpB,CACEE,QAAS,CACPL,KAAM,qBACNC,MAAO,6BACPC,OAAQ,QAEVC,UAAW,CAAC,EAAG,IAEjB,CACEE,QAAS,CACPL,KAAM,wCACNC,MAAO,6BACPC,OAAQ,QAEVC,UAAW,CAAC,IAEd,CACEE,QAAS,CACPL,KAAM,eACNC,MAAO,6BACPC,OAAQ,QAEVC,UAAW,CAAC,EAAG,EAAG,EAAG,EAAG,KAG5BL,eAAgB,GAGZQ,EAAmB,CACvBC,WAAY,EACZC,QAAS,CACP,CACEC,GAAI,EACJT,KAAM,8BACNU,SAAU,CACR,CACED,GAAI,EACJE,KAAM,0BAER,CACEF,GAAI,EACJE,KAAM,0BAER,CACEF,GAAI,EACJE,KAAM,0BAER,CACEF,GAAI,GACJE,KAAM,0BAER,CACEF,GAAI,GACJE,KAAM,0BAER,CACEF,GAAI,GACJE,KAAM,4BAIZ,CACEF,GAAI,EACJT,KAAM,wBACNU,SAAU,CACR,CACED,GAAI,GACJE,KAAM,0BAER,CACEF,GAAI,GACJE,KAAM,0BAER,CACEF,GAAI,GACJE,KAAM,0BAER,CACEF,GAAI,GACJE,KAAM,0BAER,CACEF,GAAI,GACJE,KAAM,0BAER,CACEF,GAAI,GACJE,KAAM,0BAER,CACEF,GAAI,GACJE,KAAM,0BAER,CACEF,GAAI,GACJE,KAAM,8BAOVC,EAAoB,CACxBL,WAAY,EACZM,SAAU,CACR,CACEF,KAAM,aACNG,IAAK,MACLJ,SAAU,CACR,CACEK,OAAQ,wBACRC,KAAM,UACNC,aAAc,UACdC,SAAU,KACVC,KAAM,OACNC,KAAM,QACNC,SAAU,OAIhB,CACEV,KAAM,aACNG,IAAK,MACLJ,SAAU,CACR,CACEK,OAAQ,8BACRC,KAAM,UACNC,aAAc,UACdC,SAAU,KACVC,KAAM,OACNC,KAAM,QACNC,SAAU,KAEZ,CACEN,OAAQ,wBACRC,KAAM,UACNC,aAAc,UACdC,SAAU,KACVC,KAAM,OACNC,KAAM,QACNC,SAAU,KAEZ,CACEN,OAAQ,wBACRC,KAAM,UACNC,aAAc,UACdC,SAAU,KACVC,KAAM,OACNC,KAAM,QACNC,SAAU,OAIhB,CACEV,KAAM,aACNG,IAAK,MACLJ,SAAU,CACR,CACEK,OAAQ,8BACRC,KAAM,UACNC,aAAc,UACdC,SAAU,KACVC,KAAM,OACNC,KAAM,QACNC,SAAU,KAEZ,CACEN,OAAQ,wBACRC,KAAM,UACNC,aAAc,UACdC,SAAU,KACVC,KAAM,OACNC,KAAM,QACNC,SAAU,OAIhB,CACEV,KAAM,aACNG,IAAK,MACLJ,SAAU,CACR,CACEK,OAAQ,8BACRC,KAAM,UACNC,aAAc,UACdC,SAAU,KACVC,KAAM,OACNC,KAAM,QACNC,SAAU,KAEZ,CACEN,OAAQ,wBACRC,KAAM,UACNC,aAAc,UACdC,SAAU,KACVC,KAAM,OACNC,KAAM,QACNC,SAAU,OAIhB,CACEV,KAAM,aACNG,IAAK,MACLJ,SAAU,IAEZ,CACEC,KAAM,aACNG,IAAK,MACLJ,SAAU,CACR,CACEK,OAAQ,8BACRC,KAAM,UACNC,aAAc,UACdC,SAAU,KACVC,KAAM,OACNC,KAAM,QACNC,SAAU,KAEZ,CACEN,OAAQ,wBACRC,KAAM,UACNC,aAAc,UACdC,SAAU,KACVC,KAAM,OACNC,KAAM,QACNC,SAAU,OAIhB,CACEV,KAAM,aACNG,IAAK,MACLJ,SAAU,CACR,CACEK,OAAQ,8BACRC,KAAM,UACNC,aAAc,UACdC,SAAU,KACVC,KAAM,OACNC,KAAM,QACNC,SAAU,KAEZ,CACEN,OAAQ,wBACRC,KAAM,UACNC,aAAc,UACdC,SAAU,KACVC,KAAM,OACNC,KAAM,QACNC,SAAU,SAOdC,EAAkB,CACtBC,UAAW,EACXZ,KAAM,yBACNO,SAAU,KACVC,KAAM,OACNK,SAAU,gBACVzB,SAAU,CACR,CACEC,KAAM,iBACNC,MAAO,6BACPC,OAAQ,QAEV,CACEF,KAAM,2BACNC,MAAO,6BACPC,OAAQ,QAEV,CACEF,KAAM,qBACNC,MAAO,6BACPC,OAAQ,QAEV,CACEF,KAAM,wCACNC,MAAO,6BACPC,OAAQ,QAEV,CACEF,KAAM,eACNC,MAAO,6BACPC,OAAQ,UAKOuB,E,WACnB,aAAe,oBACbC,KAAKC,gBAAkBD,KAAKC,gBAAgBC,KAAKF,MACjDA,KAAKG,kBAAoBH,KAAKG,kBAAkBD,KAAKF,MACrDA,KAAKI,kBAAoBJ,KAAKI,kBAAkBF,KAAKF,MACrDA,KAAKK,oBAAsBL,KAAKK,oBAAoBH,KAAKF,MACzDA,KAAKM,qBAAuBN,KAAKM,qBAAqBJ,KAAKF,MAC3DA,KAAKO,mBAAqBP,KAAKO,mBAAmBL,KAAKF,M,8DAIvD,MA1YF,iR,0CA8YE,OAAOQ,QAAQC,QAAQxC,K,0CAIvB,OAAOuC,QAAQC,QAAQ/B,K,4CAIvB,OAAO8B,QAAQC,QAAQ7B,K,6CAIvB,OAAO4B,QAAQC,QAAQvB,K,2CAIvB,OAAOsB,QAAQC,QAAQb,O,KC9ZNc,E,WACnB,WAAYC,GAAS,oBACnBX,KAAKY,SAAW,IAAIb,EAEpBC,KAAKW,OAAS,2BACdX,KAAKa,MAAQb,KAAKa,MAAMX,KAAKF,MAC7BA,KAAKc,MAAQd,KAAKc,MAAMZ,KAAKF,MAC7BA,KAAKe,UAAYf,KAAKe,UAAUb,KAAKF,MACrCA,KAAKgB,QAAUhB,KAAKgB,QAAQd,KAAKF,MACjCA,KAAKiB,SAAWjB,KAAKiB,SAASf,KAAKF,M,kDAG/BzB,EAAO2C,GAEX,OADAlB,KAAKmB,SAASnB,KAAKY,SAASX,mBACrBO,QAAQC,QAAQT,KAAKY,SAASX,qB,iCAmBrC,QAHcD,KAAKoB,a,qCAMNC,GACb,IAEE,OADgBC,IAAOD,GACXE,IAAMC,KAAKC,MAAQ,IAG/B,MAAOC,GACP,OAAO,K,+BAIFL,GACPM,aAAaC,QAAQ,QAASP,K,iCAI9B,OAAOM,aAAaE,QAAQ,W,gCAGpBR,GACR,OAAO,I,8BASDA,GACN,IAEE,OADgBC,IAAOD,GACR/C,KACf,MAAOoD,GACP,OAAO,Q,+BAIFL,GACP,IAEE,OADgBC,IAAOD,GACRS,IACf,MAAOJ,GACP,OAAO,Q,6BAIJ3C,EAAIgD,GAET,OADAJ,aAAaK,WAAW,SACjBxB,QAAQC,SAAQ,K,6IAmBnBwB,EAAKC,GACT,IAAMC,EAAU,CAEd,eAAgB,oBAOlB,OAJInC,KAAKoC,aACPD,EAAQ,mBAAqB,UAAYnC,KAAKoB,YAGzCP,MAAMoB,EAAD,aACVE,WACGD,IAEFG,KAAKrC,KAAKsC,cACVD,MAAK,SAACE,GAAD,OAAcA,EAASC,c,mCAGpBD,GACX,GAAIA,EAASE,QAAU,KAAOF,EAASE,OAAS,IAC9C,OAAOF,EAEP,IAAIG,EAAQ,IAAIC,MAAMJ,EAASK,YAG/B,MAFAF,EAAMH,SAAWA,EACjBM,MAAM,6BACAH,M,KC7CGI,E,YA9Eb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAKRC,kBAAoB,SAACC,GAAW,IAAD,EACLA,EAAMC,OAAtBC,EADqB,EACrBA,MAAO7E,EADc,EACdA,KACf,EAAK8E,SAAL,eACG9E,EAAO6E,KATO,EAanBE,SAAW,SAACJ,GACVA,EAAMK,iBACN,EAAKC,MACFzC,MAAM,EAAK0C,MAAMC,MAAO,EAAKD,MAAME,UACnCrB,MAAK,SAACsB,GACL,EAAKZ,MAAMa,QAAQC,QAAQ,iBAE5BC,OAAM,SAACpC,GACNmB,MAAMnB,OAnBV,EAAK8B,MAAQ,CAAEC,MAAO,GAAIC,SAAU,IACpC,EAAKH,MAAQ,IAAI7C,EAHA,E,sEA2BjB,OACE,kBAACqD,EAAA,EAAD,CAAMC,UAAU,cAAcX,SAAUrD,KAAKqD,UAC3C,kBAACU,EAAA,EAAKE,MAAN,CAAYC,UAAU,aACpB,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWE,KAAZ,CAAiBtF,GAAG,qBAClB,kBAAC,IAAD,CAAiBiF,UAAU,aAAaM,KAAMC,QAGlD,kBAACR,EAAA,EAAKS,QAAN,CACEC,KAAK,OACLnG,KAAK,QACLoG,YAAY,QACZC,mBAAiB,oBACjBC,SAAU5E,KAAKgD,kBACf6B,UAAQ,IAEV,kBAACd,EAAA,EAAKS,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,qCAMJ,kBAACV,EAAA,EAAKE,MAAN,CAAYC,UAAU,gBACpB,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWE,KAAZ,CAAiBtF,GAAG,qBAClB,kBAAC,IAAD,CAAiBiF,UAAU,aAAaM,KAAMS,QAGlD,kBAAChB,EAAA,EAAKS,QAAN,CACEC,KAAK,WACLnG,KAAK,WACLoG,YAAY,WACZC,mBAAiB,oBACjBC,SAAU5E,KAAKgD,kBACf6B,UAAQ,IAEV,kBAACd,EAAA,EAAKS,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,gCAMJ,kBAACO,EAAA,EAAD,CAAQC,QAAQ,UAAUR,KAAK,UAA/B,c,GAxEaS,IAAMC,W,QCyCZC,E,YA1Cb,WAAYrC,GAAQ,IAAD,8BACjB,4CAAMA,KACDsC,YAAc,EAAKA,YAAYnF,KAAjB,gBACnB,EAAKsD,MAAQ,CACX8B,QAAQ,GAEV,EAAK/B,MAAQ,IAAI7C,EANA,E,iFAUbV,KAAKuD,MAAMnB,YAAYpC,KAAK+C,MAAMa,QAAQC,QAAQ,O,oCAItD,IAAM0B,EAAevF,KAAKwD,MAAM8B,OAChCtF,KAAKoD,SAAS,CAAEkC,QAASC,M,+BAIzB,OACE,kBAACC,EAAA,EAAD,CAAWxB,UAAU,UACnB,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,gBACb,0CAEF,yBAAKA,UAAU,kBAEjB,yBAAKA,UAAU,qBACb,kBAAC,EAAD,CAAQJ,QAAS5D,KAAK+C,MAAMa,WAE9B,yBAAKI,UAAU,gBACb,yBAAKA,UAAU,iBACf,sCACU,+C,GAnCHkB,IAAMC,W,oBCNlB,I,gBC2IQM,E,YAnIb,WAAY1C,GAAQ,IAAD,8BACjB,4CAAMA,KACDS,MAAQ,CACXkC,YAAa,GACbC,eAAe,GAEjB,EAAKC,cAAgB,EAAKA,cAAc1F,KAAnB,gBACrB,EAAK2F,gBAAkB,EAAKA,gBAAgB3F,KAArB,gBACvB,EAAK4F,aAAe,EAAKA,aAAa5F,KAAlB,gBARH,E,iFAYbF,KAAK+C,MAAMjE,QAAQiH,OAAS,GAAG/F,KAAKgG,oB,yCAGvBC,EAAWC,GACxBlG,KAAK+C,MAAMjE,UAAYmH,EAAUnH,SACnCkB,KAAKgG,kBAEHhG,KAAK+C,MAAM7E,WAAa+H,EAAU/H,UACpC8B,KAAKgG,oB,wCAIU,IAAD,OAChB,OAAO,IAAIxF,SAAQ,SAACC,EAAS0F,GAE3B,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAAI,EAAKtD,MAAMjE,QAAQiH,OAAQM,IAC7CD,EAAKE,MAAK,GAEZ,EAAKlD,SACH,CACEsC,YAAaU,IAEf,WACE3F,EAAQ,EAAK+C,MAAMkC,qB,oCAMba,GAAQ,IAAD,OACnBvG,KAAKgG,kBAAkB3D,MAAK,SAACsB,GAC3BA,EAAI4C,IAAS,EACb,EAAKnD,SAAS,CACZsC,YAAa/B,S,oCAKL6C,EAAMD,GAClBvG,KAAKyG,cAAcF,GACnBvG,KAAK+C,MAAM2D,aAAaF,EAAKzH,IAC7BiB,KAAK+C,MAAM4D,iB,wCAIX3G,KAAKgG,kBACLhG,KAAK+C,MAAM6D,cACX5G,KAAK+C,MAAM4D,iB,qCAGG,IAAD,OACb3G,KAAKoD,SACH,CACEuC,eAAgB3F,KAAKwD,MAAMmC,gBAE7B,WACEkB,SAASC,eAAe,WAAWC,MAAMC,KAAO,EAAKxD,MAAMmC,cACvD,MACA,c,+BAKA,IAAD,OACP,GAAI3F,KAAK+C,MAAMkE,UACb,OACE,yBAAKjD,UAAU,WACb,yBAAKjF,GAAG,UAAUiF,UAAU,eAC1B,yBAAKA,UAAU,SACf,uBAAGA,UAAU,cAAb,gBACA,yBAAKA,UAAU,uBACb,kBAACkD,EAAA,EAAD,CACEC,UAAU,SACVlC,QAAQ,UACRmC,KAAK,cAQjB,IAAItI,EAAUkB,KAAK+C,MAAMjE,QAAQuI,KAAI,SAACb,EAAMD,GAC1C,OACE,wBAAIe,IAAKf,GACP,kBAAC,OAAD,CACEvC,UACE,EAAKR,MAAMkC,YAAYa,GAAS,mBAAqB,YAEvDgB,GAAG,GACHC,QAAS,EAAK5B,cAAc1F,KAAK,KAAMsG,EAAMD,IAE7C,0BAAMvC,UAAU,eAAewC,EAAKlI,WAM5C,OACE,yBAAK0F,UAAU,WACb,yBAAKjF,GAAG,UAAUiF,UAAU,eAC1B,yBAAKA,UAAU,SACf,uBAAGA,UAAU,eAAb,YAAqChE,KAAK+C,MAAM0E,YAChD,0BAAMzD,UAAU,cAAcwD,QAASxH,KAAK8F,cACxC9F,KAAKwD,MAAMmC,cAGX,kBAAC,IAAD,CAAiB3B,UAAU,aAAaM,KAAMoD,MAF9C,kBAAC,IAAD,CAAiB1D,UAAU,aAAaM,KAAMqD,OAKlD,4BAAQ3D,UAAU,eAAewD,QAASxH,KAAK6F,iBAA/C,sBAGA,4BAAK/G,S,GA9HOoG,IAAMC,W,mECiJbyC,G,kBA5Ib,WAAY7E,GAAQ,IAAD,8BACjB,4CAAMA,KACDQ,MAAQ,IAAI7C,EAEjB,EAAK8C,MAAQ,CACXvB,IAAK,4BAGP,EAAK4F,kBAAoB,EAAKA,kBAAkB3H,KAAvB,gBACzB,EAAK4H,oBAAsB,EAAKA,oBAAoB5H,KAAzB,gBATV,E,uEAYT1B,GACR,IAAK,IAAI6H,EAAI,EAAGA,EAAIrG,KAAK+C,MAAMgF,aAAa1J,SAAS0H,OAAQM,IAAK,CAEhE,GADgBrG,KAAK+C,MAAMgF,aAAa1J,SAASgI,GACrC7H,SAAWA,EACrB,OAAO,EAGX,OAAO,I,0CAGY,IAAD,OACZwJ,EAAQnB,SAASC,eAAe,mBAEtCmB,IAAYD,GAAO3F,MAAK,SAAC6F,GACvB,IAAMC,EAAUD,EAAOE,UAAU,aAC3BC,EAAM,IAAIC,IAAM,CAAEC,YAAa,cACrCF,EAAIG,SAASL,EAAS,MAAO,EAAG,GAChCE,EAAII,KACF,EAAK1F,MAAM2F,WACT,IACA,EAAK3F,MAAM4F,WAAWxK,WACtB,cACA,EAAK4E,MAAM6F,aACX,a,0CAKYpC,EAAMD,GACRvG,KAAK+C,MAAMgF,aAAalI,UACxB2G,EAAKzH,GAErB8D,MAAM,kD,+BAcE,IAAD,OACP,GAAI7C,KAAK+C,MAAMkE,UACb,OACE,yBAAKjD,UAAU,uBACb,kBAACkD,EAAA,EAAD,CAASC,UAAU,SAASlC,QAAQ,UAAUmC,KAAK,YAKzD,IAAI/I,EAAW2B,KAAK+C,MAAM4F,WAAWtK,SAASgJ,KAAI,SAACb,EAAMD,GACvD,OACE,wBAAIe,IAAKf,GACP,4BAAKA,EAAQ,EAAb,KACA,4BAAKC,EAAKlI,MACV,wBAAI0F,UAAU,eAAewC,EAAKhI,QAClC,4BAAKgI,EAAKjI,OACV,wBAAIyF,UAAU,eACX,EAAK6E,UAAUrC,EAAKhI,QAAU,MAAQ,KAEzC,wBAAIwF,UAAU,eAAewC,EAAK/H,WAClC,wBAAIuF,UAAU,iBACV,EAAK6E,UAAUrC,EAAKhI,QAWpB,IAVA,kBAAC,OAAD,CACEwF,UAAU,oBACVuD,GAAG,GACHC,QAAS,EAAKM,oBAAoB5H,KAAK,KAAMsG,EAAMD,IAEnD,8BACE,kBAAC,IAAD,CAAiBjC,KAAMwE,aAWrC,OACE,yBAAK9E,UAAU,sBACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CACEjF,GAAG,wBACHiF,UAAU,aACV+E,MAAM,kBACNC,SACEhJ,KAAK+C,MAAM2F,WACX,IACA1I,KAAK+C,MAAM4F,WAAWxK,WACtB,cACA6B,KAAK+C,MAAM6F,aAEbK,MAAM,WACNC,WAAW,kBAEb,kBAAClE,EAAA,EAAD,CACEhB,UAAU,SACViB,QAAQ,OACRuC,QAASxH,KAAK6H,mBAHhB,kBAQF,kBAACsB,EAAA,EAAD,CAAOC,YAAU,EAACC,UAAQ,EAACC,OAAK,EAACvK,GAAG,mBAClC,+BACE,4BACE,iCACA,oCACA,gDACA,qCACA,uCACA,iDACA,+CAGJ,+BAAQV,S,GAvIY6G,IAAMC,YC6GrBoE,E,YAhHb,WAAYxG,GAAQ,IAAD,8BACjB,4CAAMA,KACDS,MAAQ,CACXgG,cAAe,IAEjB,EAAK3B,kBAAoB,EAAKA,kBAAkB3H,KAAvB,gBALR,E,iFAkBE,IAAD,OACZ8H,EAAQnB,SAASC,eAAe,mBAEtCmB,IAAYD,GAAO3F,MAAK,SAAC6F,GACvB,IAAMC,EAAUD,EAAOE,UAAU,aAC3BC,EAAM,IAAIC,IAAM,CAAEC,YAAa,cACrCF,EAAIG,SAASL,EAAS,MAAO,EAAG,GAChCE,EAAII,KACF,EAAK1F,MAAM2F,WACT,IACA,EAAK3F,MAAM4F,WAAWxK,WACtB,kC,gCAKE0B,EAAW4J,GACnB,IAAK,IAAIpD,EAAI,EAAGA,EAAIoD,EAAiB1D,OAAQM,IAC3C,GAAIoD,EAAiBpD,KAAOxG,EAAW,OAAO,EAEhD,OAAO,I,+BAGC,IAAD,OACP,GAAIG,KAAK+C,MAAMkE,UACb,OACE,yBAAKjD,UAAU,uBACb,kBAACkD,EAAA,EAAD,CAASC,UAAU,SAASlC,QAAQ,UAAUmC,KAAK,YAKzD,IAAI/I,EAAW2B,KAAK+C,MAAM2G,aAAarL,SAASgJ,KAAI,SAACb,EAAMD,GACzD,OACE,wBAAIe,IAAKf,GACP,4BAAKA,EAAQ,EAAb,KACA,4BAAKC,EAAK7H,QAAQL,MAClB,wBAAI0F,UAAU,eAAewC,EAAK7H,QAAQH,QACzC,EAAKgF,MAAMgG,cAAcnC,KAAI,SAACsC,EAAMtD,GACnC,OACE,wBAAIrC,UAAU,cAAcsD,IAAKjB,GAC9B,EAAKwC,UAAUc,EAAMnD,EAAK/H,WAAa,MAAQ,QAItD,wBAAIuF,UAAU,eAAewC,EAAK/H,UAAUsH,YAK9C5D,EAAUnC,KAAKwD,MAAMgG,cAAcnC,KAAI,SAACb,EAAMD,GAChD,OAAO,wBAAIe,IAAKf,GAAQ,WAAaC,MAGvC,OACE,yBAAKxC,UAAU,sBACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CACEjF,GAAG,wBACHiF,UAAU,aACV+E,MAAM,kBACNC,SACEhJ,KAAK+C,MAAM2F,WACX,IACA1I,KAAK+C,MAAM4F,WAAWxK,WACtB,wBAEF8K,MAAM,WACNC,WAAW,kBAEb,kBAAClE,EAAA,EAAD,CACEhB,UAAU,SACViB,QAAQ,OACRuC,QAASxH,KAAK6H,mBAHhB,kBAQF,kBAACsB,EAAA,EAAD,CAAOC,YAAU,EAACC,UAAQ,EAACC,OAAK,EAACvK,GAAG,mBAClC,+BACE,4BACE,iCACA,oCACA,gDACCoD,EACD,mDAGJ,+BAAQ9D,Q,gDAlGgB0E,EAAOS,GAErC,IADA,IAAI4C,EAAO,GACFC,EAAI,EAAGA,EAAItD,EAAM2G,aAAatL,eAAgBiI,IACrDD,EAAKE,KAAKD,EAAI,GAEhB,MAAO,CACLmD,cAAepD,O,GAfSlB,IAAMC,WCuMrByE,E,YApMb,WAAY7G,GAAQ,IAAD,8BACjB,4CAAMA,KACDQ,MAAQ,IAAI7C,EACjB,EAAKE,SAAW,IAAIb,EAEpB,EAAKyD,MAAQ,CACXvB,IAAK,2BACLyH,aAAc,KACdG,uBAAuB,EACvBC,mBAAmB,EACnBC,iBAAiB,GAEnB,EAAKC,YAAc,EAAKA,YAAY9J,KAAjB,gBACnB,EAAK+J,eAAiB,EAAKA,eAAe/J,KAApB,gBACtB,EAAKgK,gBAAkB,EAAKA,gBAAgBhK,KAArB,gBAdN,E,gFAiBA+F,EAAWC,GACxBlG,KAAK+C,MAAM7E,WAAa+H,EAAU/H,UACpC8B,KAAKoD,SAAS,CACZyG,uBAAuB,EACvBC,mBAAmB,M,oCAMvB9J,KAAK+C,MAAM4D,eACX3G,KAAKoD,SAAS,CACZyG,uBAAuB,EACvBC,mBAAmB,M,qCAIRtD,EAAMD,EAAOtD,GAC1BjD,KAAKmK,qBAAqB3D,EAAMD,K,wCAkBhCvG,KAAKoK,0B,+BAoBG,IAAD,OACP,IAAKpK,KAAK+C,MAAMkE,YAAcjH,KAAK+C,MAAM4F,WACvC,OACE,yBAAK3E,UAAU,wBACb,0BAAMA,UAAU,iBAAhB,wDAON,GAAIhE,KAAK+C,MAAMkE,UACb,OACE,yBAAKjD,UAAU,uBACb,kBAACkD,EAAA,EAAD,CAASC,UAAU,SAASlC,QAAQ,UAAUmC,KAAK,YAKzD,IAAIpI,EAAWgB,KAAK+C,MAAM/D,SAASA,SAASqI,KAAI,SAACb,EAAMD,GACrD,IAAI8D,EAAQ,IAAI7I,KAAKgF,EAAKvH,KAAK4E,QAAQ,OAAQ,MAC3CyG,GAED,IAAMD,EAAME,WAAWC,OAAO,GAC/B,KACC,KAAOH,EAAMI,WAAa,IAAID,OAAO,GACtC,IACAH,EAAMK,cACN,IACEC,GAED,IAAMN,EAAMO,YAAYJ,OAAO,GAChC,KACC,IAAMH,EAAMQ,cAAcL,OAAO,GACpC,OACE,kBAAC,OAAD,CACExG,UAAU,eACVuD,GAAG,GACHD,IAAKf,EACLiB,QAAS,EAAKyC,eAAe/J,KAAK,KAAMsG,EAAMD,IAE9C,sCACWA,EAAQ,EADnB,IACsB,0BAAMvC,UAAU,gBAAgB2G,GACpD,0BAAM3G,UAAU,gBAAgBsG,QAMxC,OACE,6BACE,yBAAKtG,UAAU,4BACZhE,KAAK+C,MAAM/D,SAASV,MAEvB,yBAAK0F,UAAU,4BACZhE,KAAK+C,MAAM4F,WAAWxK,YAEzB,yBAAK6F,UAAU,iBACc,IAA1BhE,KAAK+C,MAAMlD,YAAqBG,KAAKwD,MAAMqG,uBAC1C,6BACE,kBAAC7E,EAAA,EAAD,CAAQC,QAAQ,OAAOuC,QAASxH,KAAKkK,gBAAgBhK,KAAK,OAA1D,mBAGClB,KAIoB,IAA1BgB,KAAK+C,MAAMlD,WACV,yBAAKmE,UAAU,iBACb,yBAAKA,UAAU,YACb,kBAACgB,EAAA,EAAD,CAAQC,QAAQ,YAAYuC,QAASxH,KAAKgK,aAA1C,SAIF,kBAAC,EAAD,CACEtB,WAAY1I,KAAK+C,MAAM/D,SAASV,KAChCqK,WAAY3I,KAAK+C,MAAM4F,WACvBC,aAAc5I,KAAKwD,MAAMoF,aACzBb,aAAc/H,KAAKwD,MAAMuE,aACzBd,UAAWjH,KAAKwD,MAAMuG,oBAID,IAA1B/J,KAAK+C,MAAMlD,WAAoBG,KAAKwD,MAAMqG,uBACzC,yBAAK7F,UAAU,iBACb,yBAAKA,UAAU,YACb,kBAACgB,EAAA,EAAD,CAAQC,QAAQ,YAAYuC,QAASxH,KAAKgK,aAA1C,SAIF,kBAAC,EAAD,CACEtB,WAAY1I,KAAK+C,MAAM/D,SAASV,KAChCqK,WAAY3I,KAAK+C,MAAM4F,WACvBe,aAAc1J,KAAKwD,MAAMkG,aACzBzC,UAAWjH,KAAKwD,MAAMsG,wB,2CAQbtD,EAAMD,GAAQ,IAAD,OAChCvG,KAAK+C,MAAM+H,cAActE,EAAKzH,IAC9BiB,KAAKY,SAASL,qBAAqB8B,MAAK,SAACsB,GACvC,EAAKP,SAAS,CACZwF,aAAcrC,EAAQ,EACtBwB,aAAcpE,EACdoG,iBAAiB,S,8CAKE,IAAD,OACtB/J,KAAKY,SAASR,oBAAoBiC,MAAK,SAACsB,GACtC,EAAKP,SAAS,CACZsG,aAAc/F,EACdkG,uBAAuB,EACvBC,mBAAmB,W,GAhMF5E,IAAMC,WCJzB4F,G,MAAS,CAAC,UAAW,UAAW,UAAW,UAAW,YAiI7CC,E,YA9Hb,WAAYjI,GAAQ,IAAD,sBACjB,4CAAMA,IAGN,IAFA,IAAIkI,EAAQ,GAEH5E,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIsE,GAAQ,IAAMtE,GAAGmE,OAAO,GAAK,MACjCS,EAAM3E,KAAK,IAAI9E,KAVJ,cAUoBmJ,IANhB,OAQjB,EAAKnH,MAAQ,CACX0H,OAAQD,GATO,E,gFAaAhF,EAAWC,GAC5B,GAAgC,OAA5BlG,KAAK+C,MAAMoI,aAAuB,CACpC,IAAI9E,EAAI,EACRrG,KAAK+C,MAAMoI,aAAahM,SAASiM,SAAQ,SAAChM,GACxCA,EAAIJ,SAASoM,SAAQ,SAACzB,GACpB,IAAI0B,EAAW,IAAI7J,KAtBZ,cAsB4BmI,EAAKjK,MAEpC4L,EAAU,WAAajF,EAAI,IAAMgF,EAAST,WAC1CW,EAAQ1E,SAASC,eAAewE,GAEhCnI,EAAS,IAAMwG,EAAKhK,SAAY,GAChC6L,EAAoB,IAAMH,EAASR,aAAgB,GAEvDU,EAAMxE,MAAM0E,IACVJ,EAASR,aAAe,EAAIW,EAAmB,IAAM,IACvDD,EAAMxE,MAAM2E,OAAcvI,EAAQ,IAClCoI,EAAMxE,MAAM4E,WACVZ,EAAOa,KAAKC,MAAMD,KAAKE,SAAWf,EAAOhF,SAE3C,IAAIgG,GACqB,GAAtBV,EAAST,WAAkBS,EAASR,aAAelB,EAAKhK,UACzD,GAEEqM,EAAoD,IAAzCD,EAAcH,KAAKC,MAAME,IAEpCE,EAEFL,KAAKC,MAAME,GACX,KACC,IAAMH,KAAKM,KAAKF,IAAUxB,OAAO,GAEpCe,EAAMY,UACJ,MACAxC,EAAKtK,OAAOmL,MAAM,EAAG,IACrB,aAEAb,EAAKnK,SACL,IACAmK,EAAKlK,KACL,UACAkK,EAAKjK,KACL,IACAuM,EACA,UAEJ5F,U,gCAKIrH,EAAU2L,GAClB,IAAK,IAAItE,EAAI,EAAGA,EAAIrH,EAAS+G,OAAQM,IAAK,CACxC,IAAI+F,EAAU,IAAI5K,KArEP,cAqEuBxC,EAASqH,GAAG3G,MAAMkL,WACpD,GAAID,EAAKC,aAAewB,EAAS,OAAO,EAE1C,OAAO,I,+BAGC,IAAD,OACP,GAAIpM,KAAK+C,MAAMkE,UACb,OACE,yBAAKjD,UAAU,uBACb,kBAACkD,EAAA,EAAD,CAASC,UAAU,SAASlC,QAAQ,UAAUmC,KAAK,YAKzD,IAAIiF,EAAOrM,KAAK+C,MAAMoI,aAAahM,SAASkI,KAAI,SAACb,EAAMD,GACrD,OAAO,wBAAIe,IAAKf,GAAQC,EAAKpH,QAG3BkN,EAAYtM,KAAKwD,MAAM0H,OAAO7D,KAAI,SAACsD,EAAMtE,GAC3C,IAAIkG,GAED,IAAM5B,EAAKC,YAAYJ,OAAO,GAC/B,KACC,IAAMG,EAAKE,cAAcL,OAAO,GACnC,OACE,wBAAIlD,IAAKjB,GACP,wBAAIrC,UAAU,QAAQuI,GACrB,EAAKxJ,MAAMoI,aAAahM,SAASkI,KAAI,SAACb,EAAMD,GAC3C,OACE,wBAAIe,IAAKf,GACN,EAAKiG,UAAUhG,EAAKxH,SAAU2L,GAC7B,yBACE5L,GAAI,WAAawH,EAAQ,IAAMoE,EAAKC,WACpC5G,UAAU,kBAGZ,YASd,OACE,yBAAKA,UAAU,iBACb,kBAACmF,EAAA,EAAD,CAAOC,YAAU,EAACC,UAAQ,GACxB,+BACE,4BACE,wBAAIrF,UAAU,QAAd,QACCqI,IAGL,+BAAQC,S,GAzHSpH,IAAMC,WCP3BsH,EAAa,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEIC,EAAW,CACf,SACA,SACA,UACA,YACA,WACA,SACA,YAGmBC,E,WACnB,aAAe,oBACb3M,KAAK4M,aAAe5M,KAAK4M,aAAa1M,KAAKF,MAC3CA,KAAK6M,WAAa7M,KAAK6M,WAAW3M,KAAKF,M,yDAG5BuG,GACX,OAAOkG,EAAWlG,K,iCAGTA,GACT,OAAOmG,EAASnG,O,KC0KLuG,E,YAjMb,aAAe,IAAD,8BACZ,+CACKvJ,MAAQ,IAAI7C,EACjB,EAAKE,SAAW,IAAIb,EACpB,EAAKgN,MAAQ,IAAIJ,EAEjB,EAAKnJ,MAAQ,CACXvB,IAAK,2BACL+K,YAAa,EAAKzJ,MAAMxC,UAAU,EAAKwC,MAAMnC,YAC7CqG,WAAY,EAAKlE,MAAMvC,QAAQ,EAAKuC,MAAMnC,YAC1C6L,iBAAiB,EACjBC,gBAAgB,EAChBC,iBAAiB,EACjBrO,QAAS,GACTE,SAAU,GACV2J,WAAY,KACZwC,aAAc,KACdiC,WAAY,IAGd,EAAKC,kBAAoB,EAAKA,kBAAkBnN,KAAvB,gBACzB,EAAKoN,wBAA0B,EAAKA,wBAAwBpN,KAA7B,gBArBnB,E,iFAyBZF,KAAKuN,sB,yCA4CYtH,EAAWC,GACxBlG,KAAK+C,MAAM7E,WAAa+H,EAAU/H,WACpC8B,KAAKoD,SAAS,CACZ6J,iBAAiB,KAEU,IAAzBjN,KAAK+C,MAAM7E,UACb8B,KAAKwN,8BAA8BxN,KAAK+C,MAAM7E,a,0CAK/B,IAAD,OAClB8B,KAAKuD,MAAMkK,OAAO9L,aAAaE,QAAQ,OAAO,GAAOQ,MAAK,SAACsB,GACzD,EAAKZ,MAAMa,QAAQC,QAAQ,e,qCAIhB6J,GACb,IAAK,IAAIrH,EAAI,EAAGA,EAAIrG,KAAKwD,MAAM1E,QAAQiH,OAAQM,IAC7C,GAAIrG,KAAKwD,MAAM1E,QAAQuH,GAAGtH,KAAO2O,EAAW,OAAO1N,KAAKwD,MAAM1E,QAAQuH,GAExE,MAAO,K,8CAGeqH,GAAY,IAAD,OAC7BC,EAAc3N,KAAK4N,eAAeF,GACtC1N,KAAKuD,MACF1C,MAAMb,KAAKwD,MAAMvB,IAAM,gBAAkByL,EAAY,WAAY,CAChEG,OAAQ,QAETxL,MAAK,SAACsB,GACL,EAAKP,SAAS,CACZuF,WAAYhF,EACZ3E,SAAU2O,EACVV,iBAAiB,IAEnBa,QAAQC,IAAIC,KAAKC,UAAUtK,S,+BAK/B,OACE,6BACE,kBAAC,EAAD,CACE7E,QAASkB,KAAKwD,MAAM1E,QACpB2I,WAAYzH,KAAKwD,MAAMiE,WACvBR,UAAWjH,KAAKwD,MAAM0J,eACtBhP,SAAU8B,KAAK+C,MAAM7E,SACrB2B,UAAWG,KAAK+C,MAAMlD,UACtB6G,aAAc1G,KAAK+C,MAAM2D,aACzBE,YAAa5G,KAAK+C,MAAM6D,YACxBkE,cAAe9K,KAAK+C,MAAM+H,cAC1BnE,aAAc3G,KAAK+C,MAAM4D,eAE3B,kBAACnB,EAAA,EAAD,CAAWxB,UAAU,WACnB,kBAAC,OAAD,CAAMA,UAAU,aAAauD,GAAG,GAAGC,QAASxH,KAAKqN,mBAC/C,yCAEF,yBAAKrJ,UAAU,kBACb,yBAAKA,UAAU,4BACZhE,KAAKwD,MAAM4J,YAEd,yBAAKpJ,UAAU,4BAAf,aAC0B,IAAzBhE,KAAK+C,MAAM7E,SACV,kBAAC,EAAD,CACEyK,WAAY3I,KAAKwD,MAAMmF,WACvB3J,SAAUgB,KAAKwD,MAAMxE,SACrBiI,UAAWjH,KAAKwD,MAAMyJ,gBACtB/O,SAAU8B,KAAK+C,MAAM7E,SACrB2B,UAAWG,KAAK+C,MAAMlD,UACtBiL,cAAe9K,KAAK+C,MAAM+H,cAC1BnE,aAAc3G,KAAK+C,MAAM4D,eAG3B,kBAAC,EAAD,CACEwE,aAAcnL,KAAKwD,MAAM2H,aACzBlE,UAAWjH,KAAKwD,MAAM2J,uB,0CASf,IAAD,OAClBnN,KAAKY,SAASP,sBAAsBgC,MAAK,SAACsB,GACxC,EAAKP,SAAS,CACZtE,QAAS6E,EAAI7E,QACboO,gBAAgB,OAIpBlN,KAAKY,SAASN,uBAAuB+B,MAAK,SAACsB,GACzC,IAAIuK,EAAQ,IAAI1M,KAAKmC,EAAIxE,SAAS,GAAGF,MACjCkP,EAAQ,IAAI3M,KAAKmC,EAAIxE,SAAS,GAAGF,MACjCA,GACD,IAAMiP,EAAM3D,WAAWC,OAAO,GAC/B,IACA,EAAKuC,MAAMH,aAAasB,EAAMzD,YAC9B,OACC,IAAM0D,EAAM5D,WAAWC,OAAO,GAC/B,IACA,EAAKuC,MAAMH,aAAauB,EAAM1D,YAChC,EAAKrH,SAAS,CACZ+H,aAAcxH,EACdwJ,iBAAiB,EACjBC,WAAYnO,S,oDAKYyO,GAAY,IAAD,OACnCC,EAAc3N,KAAK4N,eAAeF,GACtC1N,KAAKY,SAAST,oBAAoBkC,MAAK,SAACsB,GACtC,EAAKP,SAAS,CACZuF,WAAYhF,EACZ3E,SAAU2O,EACVV,iBAAiB,W,GA5LD/H,IAAMC,WCDxBiJ,GAAqB,CACzB1H,aRX0B,SAAC3H,GAC3B,MAAO,CACL0F,KAAM,gBACN4J,QAAStP,IQSX6H,YRLyB,WACzB,MAAO,CACLnC,KAAM,iBQIRqG,cRA2B,SAAC/L,GAC5B,MAAO,CACL0F,KAAM,iBACN4J,QAAStP,IQFX4H,aRM0B,WAC1B,MAAO,CACLlC,KAAM,mBQEK6J,GCrBA,SAAkBC,GAC/B,IAAMhL,EAAQ,IAAI7C,EAClB,mBACE,aAAe,IAAD,8BACZ,+CACK8C,MAAQ,CACXgL,KAAM,MAHI,EADhB,iFASI,GAAKjL,EAAMnB,WAGT,IACE,IAAMqM,EAAUlL,EAAMvC,QAAQuC,EAAMnC,YACpCpB,KAAKoD,SAAS,CACZoL,KAAMC,IAER,MAAO/M,GACP6B,EAAMkK,SACNzN,KAAK+C,MAAMa,QAAQC,QAAQ,eAT7B7D,KAAK+C,MAAMa,QAAQC,QAAQ,YAVjC,+BAyBI,OAAI7D,KAAKwD,MAAMgL,KAEX,kBAACD,EAAD,CAAe3K,QAAS5D,KAAK+C,MAAMa,QAAS4K,KAAMxO,KAAKwD,MAAMgL,OAGxD,SA9Bb,EAAM,CAA2BrJ,aDmBpBmJ,CACbI,aARsB,SAAClL,GACvB,MAAO,CACLtF,SAAUsF,EAAMtF,SAChB2B,UAAW2D,EAAM3D,aAKMuO,GAAzBM,CAA6C5B,IEDhC6B,G,iLAhBX,OACE,yBAAK3K,UAAU,OACb,8BACE,kBAAC,IAAD,CAAY4K,SAAS,KACnB,6BACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAW1J,IAChC,kBAAC,IAAD,CAAOyJ,KAAK,aAAaC,UAAWhC,KACpC,kBAAC,IAAD,CAAOiC,OAAK,EAACF,KAAK,IAAIC,UAAWhC,a,GAT7B5H,IAAMC,WCMJ6J,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mBCRSC,GAVO,WAAyB,IAAxB7L,EAAuB,wDAAd,EAAG8L,EAAW,uCAC5C,OAAQA,EAAO7K,MACb,IAAK,gBACH,OAAO6K,EAAOjB,QAChB,IAAK,eACH,OAAQ,EACV,QACE,OAAO7K,ICGE+L,GAVQ,WAAyB,IAAxB/L,EAAuB,wDAAd,EAAG8L,EAAW,uCAC7C,OAAQA,EAAO7K,MACb,IAAK,iBACH,OAAO6K,EAAOjB,QAChB,IAAK,gBACH,OAAQ,EACV,QACE,OAAO7K,ICCEgM,GARO,WAA4B,IAA3BhM,EAA0B,wDAAX8L,EAAW,uCAC/C,OAAQA,EAAO7K,MACb,IAAK,UACH,OAAQjB,EACV,QACE,OAAOA,ICKEiM,GALKC,aAAgB,CAClCxR,SAAUmR,GACVxP,UAAW0P,GACXI,SAAUH,KCGRI,GAAQC,aACVJ,GACAR,OAAOa,8BAAgCb,OAAOa,gCAGhDC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJ/I,SAASC,eAAe,SL6GpB,kBAAmBmJ,WACrBA,UAAUC,cAAcC,MACrB9N,MAAK,SAAA+N,GACJA,EAAaC,gBAEdvM,OAAM,SAAApB,GACLoL,QAAQpL,MAAMA,EAAM4N,c","file":"static/js/main.df0ddb8a.chunk.js","sourcesContent":["//demo api mockup, each set of data simulates a response from the endpoint\r\n\r\nconst exampleToken =\r\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiIiLCJpYXQiOjE1ODkyOTI5OTksImV4cCI6bnVsbCwiYXVkIjoiIiwic3ViIjoiMTIzNDU2QHN0dWRlbnQucHdyLndyb2MucGwiLCJ1c2VySWQiOiI1IiwibmFtZSI6Ik1hcmNpbiBTcGFzacWEc2tpIiwicm9sZSI6IkxFQ1RVUkVSIn0.0Fqxiyv6YX5CalF_Fm3c70IBaVy7ZC5c5pfrdFtIzi4\";\r\n\r\nconst exampleToken2 =\r\n  \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMTExMTFAc3R1ZGVudC5wd3Iud3JvYy5wbCIsInVzZXJJZCI6IjEiLCJuYW1lIjoiS2FtaWwgQnJ6eWNraSIsInJvbGUiOiJTVFVERU5UIn0.U6iQ9viaBtKJ-SAZlyMe1xyqmkYEv1wCs_dfsvz8F2I\";\r\n\r\nconst coursesDetails = {\r\n  courseId: 1,\r\n  courseCode: \"E05-10b\",\r\n  lecturesAmount: 6,\r\n  students: [\r\n    {\r\n      name: \"Henryk de Valois\",\r\n      email: \"200001@student.pwr.wroc.pl\",\r\n      indeks: 200001,\r\n      presences: 0,\r\n    },\r\n    {\r\n      name: \"Istvan Bathory\",\r\n      email: \"111111@student.pwr.wroc.pl\",\r\n      indeks: 111111,\r\n      presences: 4,\r\n    },\r\n    {\r\n      name: \"Sigismund Vasa\",\r\n      email: \"222222@student.pwr.wroc.pl\",\r\n      indeks: 222222,\r\n      presences: 4,\r\n    },\r\n    {\r\n      name: \"Władysław Vasa\",\r\n      email: \"333333@student.pwr.wroc.pl\",\r\n      indeks: 333333,\r\n      presences: 3,\r\n    },\r\n    {\r\n      name: \"Jan Kazimierz Vasa\",\r\n      email: \"444444@student.pwr.wroc.pl\",\r\n      indeks: 444444,\r\n      presences: 2,\r\n    },\r\n    {\r\n      name: \"Michał Korybut Wiśniowiecki\",\r\n      email: \"555555@student.pwr.wroc.pl\",\r\n      indeks: 555555,\r\n      presences: 1,\r\n    },\r\n    {\r\n      name: \"Jan Sobieski\",\r\n      email: \"666666@student.pwr.wroc.pl\",\r\n      indeks: 666666,\r\n      presences: 5,\r\n    },\r\n  ],\r\n};\r\n\r\nconst coursesSummary = {\r\n  courseId: 1,\r\n  courseCode: \"E05-10b\",\r\n  students: [\r\n    {\r\n      student: {\r\n        name: \"Henryk de Valois\",\r\n        email: \"200001@student.pwr.wroc.pl\",\r\n        indeks: 200001,\r\n      },\r\n      presences: [],\r\n    },\r\n    {\r\n      student: {\r\n        name: \"Istvan Bathory\",\r\n        email: \"111111@student.pwr.wroc.pl\",\r\n        indeks: 111111,\r\n      },\r\n      presences: [1, 2, 3, 6],\r\n    },\r\n    {\r\n      student: {\r\n        name: \"Sigismund Vasa\",\r\n        email: \"222222@student.pwr.wroc.pl\",\r\n        indeks: 222222,\r\n      },\r\n      presences: [2, 3, 4, 6],\r\n    },\r\n    {\r\n      student: {\r\n        name: \"Władysław Vasa\",\r\n        email: \"333333@student.pwr.wroc.pl\",\r\n        indeks: 333333,\r\n      },\r\n      presences: [1, 3, 5],\r\n    },\r\n    {\r\n      student: {\r\n        name: \"Jan Kazimierz Vasa\",\r\n        email: \"444444@student.pwr.wroc.pl\",\r\n        indeks: 444444,\r\n      },\r\n      presences: [1, 6],\r\n    },\r\n    {\r\n      student: {\r\n        name: \"Michał Korybut Wiśniowiecki\",\r\n        email: \"555555@student.pwr.wroc.pl\",\r\n        indeks: 555555,\r\n      },\r\n      presences: [1],\r\n    },\r\n    {\r\n      student: {\r\n        name: \"Jan Sobieski\",\r\n        email: \"666666@student.pwr.wroc.pl\",\r\n        indeks: 666666,\r\n      },\r\n      presences: [1, 2, 3, 4, 5],\r\n    },\r\n  ],\r\n  lecturesAmount: 6,\r\n};\r\n\r\nconst lecturersCourses = {\r\n  lecturerId: 5,\r\n  courses: [\r\n    {\r\n      id: 2,\r\n      name: \"Computer Project Management\",\r\n      lectures: [\r\n        {\r\n          id: 7,\r\n          date: \"2020-05-05 at 09:00:00\",\r\n        },\r\n        {\r\n          id: 8,\r\n          date: \"2020-05-06 at 09:00:00\",\r\n        },\r\n        {\r\n          id: 9,\r\n          date: \"2020-05-07 at 09:00:00\",\r\n        },\r\n        {\r\n          id: 10,\r\n          date: \"2020-05-08 at 09:00:00\",\r\n        },\r\n        {\r\n          id: 11,\r\n          date: \"2020-05-09 at 09:00:00\",\r\n        },\r\n        {\r\n          id: 12,\r\n          date: \"2020-05-10 at 09:00:00\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Elect. media in Busi.\",\r\n      lectures: [\r\n        {\r\n          id: 13,\r\n          date: \"2020-05-05 at 01:00:00\",\r\n        },\r\n        {\r\n          id: 14,\r\n          date: \"2020-05-06 at 01:00:00\",\r\n        },\r\n        {\r\n          id: 15,\r\n          date: \"2020-05-07 at 01:00:00\",\r\n        },\r\n        {\r\n          id: 16,\r\n          date: \"2020-05-08 at 01:00:00\",\r\n        },\r\n        {\r\n          id: 17,\r\n          date: \"2020-05-09 at 01:00:00\",\r\n        },\r\n        {\r\n          id: 18,\r\n          date: \"2020-05-10 at 01:00:00\",\r\n        },\r\n        {\r\n          id: 19,\r\n          date: \"2020-05-11 at 01:00:00\",\r\n        },\r\n        {\r\n          id: 20,\r\n          date: \"2020-05-12 at 01:00:00\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst lecturersSchedule = {\r\n  lecturerId: 5,\r\n  schedule: [\r\n    {\r\n      date: \"2020-05-04\",\r\n      day: \"MON\",\r\n      lectures: [\r\n        {\r\n          course: \"Elect. media in Busi.\",\r\n          code: \"E08-60a\",\r\n          lecturerName: \"M. Spas\",\r\n          building: \"C4\",\r\n          room: \"s239\",\r\n          time: \"19:00\",\r\n          duration: 120,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      date: \"2020-05-05\",\r\n      day: \"TUE\",\r\n      lectures: [\r\n        {\r\n          course: \"Computer Project Management\",\r\n          code: \"E08-59a\",\r\n          lecturerName: \"M. Spas\",\r\n          building: \"C4\",\r\n          room: \"s239\",\r\n          time: \"09:00\",\r\n          duration: 105,\r\n        },\r\n        {\r\n          course: \"Elect. media in Busi.\",\r\n          code: \"E08-60a\",\r\n          lecturerName: \"M. Spas\",\r\n          building: \"C4\",\r\n          room: \"s239\",\r\n          time: \"13:00\",\r\n          duration: 165,\r\n        },\r\n        {\r\n          course: \"Elect. media in Busi.\",\r\n          code: \"E08-60a\",\r\n          lecturerName: \"M. Spas\",\r\n          building: \"C4\",\r\n          room: \"s239\",\r\n          time: \"16:00\",\r\n          duration: 105,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      date: \"2020-05-06\",\r\n      day: \"WED\",\r\n      lectures: [\r\n        {\r\n          course: \"Computer Project Management\",\r\n          code: \"E08-59a\",\r\n          lecturerName: \"M. Spas\",\r\n          building: \"C4\",\r\n          room: \"s239\",\r\n          time: \"07:30\",\r\n          duration: 105,\r\n        },\r\n        {\r\n          course: \"Elect. media in Busi.\",\r\n          code: \"E08-60a\",\r\n          lecturerName: \"M. Spas\",\r\n          building: \"C4\",\r\n          room: \"s239\",\r\n          time: \"13:00\",\r\n          duration: 165,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      date: \"2020-05-07\",\r\n      day: \"THU\",\r\n      lectures: [\r\n        {\r\n          course: \"Computer Project Management\",\r\n          code: \"E08-59a\",\r\n          lecturerName: \"M. Spas\",\r\n          building: \"C4\",\r\n          room: \"s239\",\r\n          time: \"10:00\",\r\n          duration: 105,\r\n        },\r\n        {\r\n          course: \"Elect. media in Busi.\",\r\n          code: \"E08-60a\",\r\n          lecturerName: \"M. Spas\",\r\n          building: \"C4\",\r\n          room: \"s239\",\r\n          time: \"12:30\",\r\n          duration: 165,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      date: \"2020-05-08\",\r\n      day: \"FRI\",\r\n      lectures: [],\r\n    },\r\n    {\r\n      date: \"2020-05-09\",\r\n      day: \"SAT\",\r\n      lectures: [\r\n        {\r\n          course: \"Computer Project Management\",\r\n          code: \"E08-59a\",\r\n          lecturerName: \"M. Spas\",\r\n          building: \"C4\",\r\n          room: \"s239\",\r\n          time: \"09:00\",\r\n          duration: 105,\r\n        },\r\n        {\r\n          course: \"Elect. media in Busi.\",\r\n          code: \"E08-60a\",\r\n          lecturerName: \"M. Spas\",\r\n          building: \"C4\",\r\n          room: \"s239\",\r\n          time: \"11:00\",\r\n          duration: 155,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      date: \"2020-05-10\",\r\n      day: \"SUN\",\r\n      lectures: [\r\n        {\r\n          course: \"Computer Project Management\",\r\n          code: \"E08-59a\",\r\n          lecturerName: \"M. Spas\",\r\n          building: \"C4\",\r\n          room: \"s239\",\r\n          time: \"16:15\",\r\n          duration: 105,\r\n        },\r\n        {\r\n          course: \"Elect. media in Busi.\",\r\n          code: \"E08-60a\",\r\n          lecturerName: \"M. Spas\",\r\n          building: \"C4\",\r\n          room: \"s239\",\r\n          time: \"13:00\",\r\n          duration: 165,\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst lecturesDetails = {\r\n  lectureId: 1,\r\n  date: \"2020-05-04 at 12:00:00\",\r\n  building: \"C4\",\r\n  room: \"s239\",\r\n  lecturer: \"Mirek Rajczyk\",\r\n  students: [\r\n    {\r\n      name: \"Istvan Bathory\",\r\n      email: \"111111@student.pwr.wroc.pl\",\r\n      indeks: 111111,\r\n    },\r\n    {\r\n      name: \"Władysław Vasa\",\r\n      email: \"333333@student.pwr.wroc.pl\",\r\n      indeks: 333333,\r\n    },\r\n    {\r\n      name: \"Jan Kazimierz Vasa\",\r\n      email: \"444444@student.pwr.wroc.pl\",\r\n      indeks: 444444,\r\n    },\r\n    {\r\n      name: \"Michał Korybut Wiśniowiecki\",\r\n      email: \"555555@student.pwr.wroc.pl\",\r\n      indeks: 555555,\r\n    },\r\n    {\r\n      name: \"Jan Sobieski\",\r\n      email: \"666666@student.pwr.wroc.pl\",\r\n      indeks: 666666,\r\n    },\r\n  ],\r\n};\r\n\r\nexport default class ApiServiceMock {\r\n  constructor() {\r\n    this.getExampleToken = this.getExampleToken.bind(this);\r\n    this.getCoursesDetails = this.getCoursesDetails.bind(this);\r\n    this.getCoursesSummary = this.getCoursesSummary.bind(this);\r\n    this.getLecturersCourses = this.getLecturersCourses.bind(this);\r\n    this.getLecturersSchedule = this.getLecturersSchedule.bind(this);\r\n    this.getLecturesDetails = this.getLecturesDetails.bind(this);\r\n  }\r\n\r\n  getExampleToken() {\r\n    return exampleToken;\r\n  }\r\n\r\n  getCoursesDetails() {\r\n    return Promise.resolve(coursesDetails);\r\n  }\r\n\r\n  getCoursesSummary() {\r\n    return Promise.resolve(coursesSummary);\r\n  }\r\n\r\n  getLecturersCourses() {\r\n    return Promise.resolve(lecturersCourses);\r\n  }\r\n\r\n  getLecturersSchedule() {\r\n    return Promise.resolve(lecturersSchedule);\r\n  }\r\n\r\n  getLecturesDetails() {\r\n    return Promise.resolve(lecturesDetails);\r\n  }\r\n}\r\n","import decode from \"jwt-decode\";\r\nimport ApiServiceMock from \"./api.mock.service\";\r\n\r\nexport default class AuthService {\r\n  constructor(domain) {\r\n    this._apiMock = new ApiServiceMock();\r\n\r\n    this.domain = \"http://25.23.181.97:8090\";\r\n    this.fetch = this.fetch.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.getUserId = this.getUserId.bind(this);\r\n    this.getName = this.getName.bind(this);\r\n    this.getEmail = this.getEmail.bind(this);\r\n  }\r\n\r\n  login(email, password) {\r\n    this.setToken(this._apiMock.getExampleToken());\r\n    return Promise.resolve(this._apiMock.getExampleToken());\r\n\r\n    /*return this.fetch(`${this.domain}/login`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n    }).then((res) => {\r\n      console.log(res.token);\r\n      this.setToken(res.token);\r\n      return Promise.resolve(res);\r\n    });*/\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    //return !!token && !this.isTokenExpired(token);\r\n    let check = token ? true : false;\r\n    return check;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  setToken(token) {\r\n    localStorage.setItem(\"token\", token);\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(\"token\");\r\n  }\r\n\r\n  getUserId(token) {\r\n    return 5;\r\n    /*try {\r\n      const decoded = decode(token);\r\n      return decoded.userId;\r\n    } catch (err) {\r\n      return null;\r\n    }*/\r\n  }\r\n\r\n  getName(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      return decoded.name;\r\n    } catch (err) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  getEmail(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      return decoded.sub;\r\n    } catch (err) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  logout(id, logged) {\r\n    localStorage.removeItem(\"token\");\r\n    return Promise.resolve(true);\r\n\r\n    /*return this.fetch(`${this.domain}/api/logout`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-Authorization\": \"Bearer \" + this.getToken(),\r\n      },\r\n      body: JSON.stringify({\r\n        id,\r\n        logged,\r\n      }),\r\n    }).then((res) => {\r\n      localStorage.removeItem(\"token\");\r\n      return Promise.resolve(res);\r\n    });*/\r\n  }\r\n\r\n  fetch(url, options) {\r\n    const headers = {\r\n      //Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    if (this.loggedIn()) {\r\n      headers[\"X-Authorization\"] = \"Bearer \" + this.getToken();\r\n    }\r\n\r\n    return fetch(url, {\r\n      headers,\r\n      ...options,\r\n    })\r\n      .then(this._checkStatus)\r\n      .then((response) => response.json());\r\n  }\r\n\r\n  _checkStatus(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return response;\r\n    } else {\r\n      var error = new Error(response.statusText);\r\n      error.response = response;\r\n      alert(\"Error database fetch data\");\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../../styles/sign-in.sass\";\r\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faLock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { Email: \"\", Password: \"\" };\r\n    this._auth = new AuthService();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const { value, name } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this._auth\r\n      .login(this.state.Email, this.state.Password)\r\n      .then((res) => {\r\n        this.props.history.replace(\"/dashboard\");\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n      });\r\n    //this._auth.logout(2, false);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form className=\"form-signin\" onSubmit={this.onSubmit}>\r\n        <Form.Group controlId=\"formEmail\">\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                <FontAwesomeIcon className=\"panel-icon\" icon={faEnvelope} />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"Email\"\r\n              placeholder=\"Email\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              onChange={this.handleInputChange}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please type your email address.\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formPassword\">\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                <FontAwesomeIcon className=\"panel-icon\" icon={faLock} />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"Password\"\r\n              placeholder=\"Password\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              onChange={this.handleInputChange}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please type your password.\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Login\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport \"../../styles/home.sass\";\r\nimport SignIn from \"./Sign-in\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleClass = this.toggleClass.bind(this);\r\n    this.state = {\r\n      active: false,\r\n    };\r\n    this._auth = new AuthService();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this._auth.loggedIn()) this.props.history.replace(\"/\");\r\n  }\r\n\r\n  toggleClass() {\r\n    const currentState = this.state.active;\r\n    this.setState({ active: !currentState });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"center\">\r\n        <div className=\"sign-in-panel\">\r\n          <div className=\"center\">\r\n            <div className=\"slope slope1\">\r\n              <span>Sign In</span>\r\n            </div>\r\n            <div className=\"slope slope0\"></div>\r\n          </div>\r\n          <div className=\"row panel-content\">\r\n            <SignIn history={this.props.history} />\r\n          </div>\r\n          <div className=\"footer-panel\">\r\n            <div className=\"slope slope2\"></div>\r\n            <p>\r\n              CheckIT <span>@2020</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","export const changeCourse = (id) => {\r\n  return {\r\n    type: \"CHANGE_COURSE\",\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const eraseCourse = () => {\r\n  return {\r\n    type: \"ERASE_COURSE\",\r\n  };\r\n};\r\n\r\nexport const changeLecture = (id) => {\r\n  return {\r\n    type: \"CHANGE_LECTURE\",\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const eraseLecture = () => {\r\n  return {\r\n    type: \"ERASE_LECTURE\",\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport \"../../styles/sidebar.sass\";\r\nimport { Link } from \"react-scroll\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeFlags: [],\r\n      sidebarHidden: false,\r\n    };\r\n    this.onCourseClick = this.onCourseClick.bind(this);\r\n    this.onScheduleClick = this.onScheduleClick.bind(this);\r\n    this.slideSidebar = this.slideSidebar.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.courses.length > 0) this.setDefaultFlags();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.courses !== prevProps.courses) {\r\n      this.setDefaultFlags();\r\n    }\r\n    if (this.props.courseId !== prevProps.courseId) {\r\n      this.setDefaultFlags();\r\n    }\r\n  }\r\n\r\n  setDefaultFlags() {\r\n    return new Promise((resolve, reject) => {\r\n      let temp = [];\r\n      for (let i = 0; i < this.props.courses.length; i++) {\r\n        temp.push(false);\r\n      }\r\n      this.setState(\r\n        {\r\n          activeFlags: temp,\r\n        },\r\n        () => {\r\n          resolve(this.state.activeFlags);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  setActiveFlag(index) {\r\n    this.setDefaultFlags().then((res) => {\r\n      res[index] = true;\r\n      this.setState({\r\n        activeFlags: res,\r\n      });\r\n    });\r\n  }\r\n\r\n  onCourseClick(data, index) {\r\n    this.setActiveFlag(index);\r\n    this.props.changeCourse(data.id);\r\n    this.props.eraseLecture();\r\n  }\r\n\r\n  onScheduleClick() {\r\n    this.setDefaultFlags();\r\n    this.props.eraseCourse();\r\n    this.props.eraseLecture();\r\n  }\r\n\r\n  slideSidebar() {\r\n    this.setState(\r\n      {\r\n        sidebarHidden: !this.state.sidebarHidden,\r\n      },\r\n      () => {\r\n        document.getElementById(\"sidebar\").style.left = this.state.sidebarHidden\r\n          ? \"0px\"\r\n          : \"-310px\";\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.props.isLoading) {\r\n      return (\r\n        <div className=\"wrapper\">\r\n          <div id=\"sidebar\" className=\"course-menu\">\r\n            <div className=\"logo\"></div>\r\n            <p className=\"title-text\">Your courses</p>\r\n            <div className=\"spinner-wrap center\">\r\n              <Spinner\r\n                animation=\"border\"\r\n                variant=\"primary\"\r\n                role=\"status\"\r\n              ></Spinner>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let courses = this.props.courses.map((data, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <Link\r\n            className={\r\n              this.state.activeFlags[index] ? \"list-elem active\" : \"list-elem\"\r\n            }\r\n            to=\"\"\r\n            onClick={this.onCourseClick.bind(null, data, index)}\r\n          >\r\n            <span className=\"course-name\">{data.name}</span>\r\n          </Link>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div id=\"sidebar\" className=\"course-menu\">\r\n          <div className=\"logo\"></div>\r\n          <p className=\"logged-user\">Welcome, {this.props.loggedName}</p>\r\n          <span className=\"burger-wrap\" onClick={this.slideSidebar}>\r\n            {!this.state.sidebarHidden ? (\r\n              <FontAwesomeIcon className=\"panel-icon\" icon={faBars} />\r\n            ) : (\r\n              <FontAwesomeIcon className=\"panel-icon\" icon={faTimesCircle} />\r\n            )}\r\n          </span>\r\n          <button className=\"btn-schedule\" onClick={this.onScheduleClick}>\r\n            Your Week Schedule\r\n          </button>\r\n          <ul>{courses}</ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { Table, Spinner, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-scroll\";\r\nimport html2canvas from \"html2canvas\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"../../styles/lecture-presence.sass\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass LecturePresence extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this._auth = new AuthService();\r\n\r\n    this.state = {\r\n      url: \"http://25.23.181.97:8090\",\r\n    };\r\n\r\n    this.handleExportToPDF = this.handleExportToPDF.bind(this);\r\n    this.onMarkPresenceClick = this.onMarkPresenceClick.bind(this);\r\n  }\r\n\r\n  isPresent(indeks) {\r\n    for (let i = 0; i < this.props.presenceData.students.length; i++) {\r\n      const element = this.props.presenceData.students[i];\r\n      if (element.indeks === indeks) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  handleExportToPDF() {\r\n    const input = document.getElementById(\"table-to-export\");\r\n\r\n    html2canvas(input).then((canvas) => {\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF({ orientation: \"landscape\" });\r\n      pdf.addImage(imgData, \"PNG\", 0, 0);\r\n      pdf.save(\r\n        this.props.courseName +\r\n          \"(\" +\r\n          this.props.courseData.courseCode +\r\n          \") - Lecture\" +\r\n          this.props.lectureIndex +\r\n          \".pdf\"\r\n      );\r\n    });\r\n  }\r\n\r\n  onMarkPresenceClick(data, index) {\r\n    let lectureId = this.props.presenceData.lectureId;\r\n    let studentId = data.id;\r\n\r\n    alert(\"Funcionality turned off in this demo version\");\r\n    /*this._auth\r\n      .fetch(this.state.url + \"/api/lectures/presence\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          lectureId,\r\n          studentId,\r\n        }),\r\n      })\r\n      .then((res) => {\r\n        alert(data.name + \" was marked as present\");\r\n      });*/\r\n  }\r\n\r\n  render() {\r\n    if (this.props.isLoading) {\r\n      return (\r\n        <div className=\"spinner-wrap center\">\r\n          <Spinner animation=\"border\" variant=\"primary\" role=\"status\"></Spinner>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let students = this.props.courseData.students.map((data, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{index + 1}.</td>\r\n          <td>{data.name}</td>\r\n          <td className=\"text-center\">{data.indeks}</td>\r\n          <td>{data.email}</td>\r\n          <td className=\"text-center\">\r\n            {this.isPresent(data.indeks) ? \"Yes\" : \" \"}\r\n          </td>\r\n          <td className=\"text-center\">{data.presences}</td>\r\n          <td className=\"mark-presence\">\r\n            {!this.isPresent(data.indeks) ? (\r\n              <Link\r\n                className=\"btn-mark-presence\"\r\n                to=\"\"\r\n                onClick={this.onMarkPresenceClick.bind(null, data, index)}\r\n              >\r\n                <span>\r\n                  <FontAwesomeIcon icon={faCheck} />\r\n                </span>\r\n              </Link>\r\n            ) : (\r\n              \" \"\r\n            )}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"presence-list-wrap\">\r\n        <div className=\"buttons-wrap\">\r\n          <ReactHTMLTableToExcel\r\n            id=\"test-table-xls-button\"\r\n            className=\"button btn\"\r\n            table=\"table-to-export\"\r\n            filename={\r\n              this.props.courseName +\r\n              \"(\" +\r\n              this.props.courseData.courseCode +\r\n              \") - Lecture\" +\r\n              this.props.lectureIndex\r\n            }\r\n            sheet=\"tablexls\"\r\n            buttonText=\"Export to XLS\"\r\n          />\r\n          <Button\r\n            className=\"button\"\r\n            variant=\"info\"\r\n            onClick={this.handleExportToPDF}\r\n          >\r\n            Export to PDF\r\n          </Button>\r\n        </div>\r\n        <Table responsive bordered hover id=\"table-to-export\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Name</th>\r\n              <th>Student's number</th>\r\n              <th>Email</th>\r\n              <th>Present</th>\r\n              <th>Presence in total</th>\r\n              <th>Mark presence</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{students}</tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default LecturePresence;\r\n","import React from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { Table, Spinner, Button } from \"react-bootstrap\";\r\nimport html2canvas from \"html2canvas\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"../../styles/lecture-presence.sass\";\r\n\r\nclass PresenceSummary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dummyLectures: [],\r\n    };\r\n    this.handleExportToPDF = this.handleExportToPDF.bind(this);\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    let temp = [];\r\n    for (let i = 0; i < props.overviewData.lecturesAmount; i++) {\r\n      temp.push(i + 1);\r\n    }\r\n    return {\r\n      dummyLectures: temp,\r\n    };\r\n  }\r\n\r\n  handleExportToPDF() {\r\n    const input = document.getElementById(\"table-to-export\");\r\n\r\n    html2canvas(input).then((canvas) => {\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF({ orientation: \"landscape\" });\r\n      pdf.addImage(imgData, \"PNG\", 0, 0);\r\n      pdf.save(\r\n        this.props.courseName +\r\n          \"(\" +\r\n          this.props.courseData.courseCode +\r\n          \") - Presence Overview.pdf\"\r\n      );\r\n    });\r\n  }\r\n\r\n  isPresent(lectureId, studentPresences) {\r\n    for (let i = 0; i < studentPresences.length; i++) {\r\n      if (studentPresences[i] === lectureId) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.isLoading) {\r\n      return (\r\n        <div className=\"spinner-wrap center\">\r\n          <Spinner animation=\"border\" variant=\"primary\" role=\"status\"></Spinner>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let students = this.props.overviewData.students.map((data, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{index + 1}.</td>\r\n          <td>{data.student.name}</td>\r\n          <td className=\"text-center\">{data.student.indeks}</td>\r\n          {this.state.dummyLectures.map((lect, i) => {\r\n            return (\r\n              <td className=\"text-center\" key={i}>\r\n                {this.isPresent(lect, data.presences) ? \"Yes\" : \" \"}\r\n              </td>\r\n            );\r\n          })}\r\n          <td className=\"text-center\">{data.presences.length}</td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    let headers = this.state.dummyLectures.map((data, index) => {\r\n      return <th key={index}>{\"Lecture \" + data}</th>;\r\n    });\r\n\r\n    return (\r\n      <div className=\"presence-list-wrap\">\r\n        <div className=\"buttons-wrap\">\r\n          <ReactHTMLTableToExcel\r\n            id=\"test-table-xls-button\"\r\n            className=\"button btn\"\r\n            table=\"table-to-export\"\r\n            filename={\r\n              this.props.courseName +\r\n              \"(\" +\r\n              this.props.courseData.courseCode +\r\n              \") - Presence Overview\"\r\n            }\r\n            sheet=\"tablexls\"\r\n            buttonText=\"Export to XLS\"\r\n          />\r\n          <Button\r\n            className=\"button\"\r\n            variant=\"info\"\r\n            onClick={this.handleExportToPDF}\r\n          >\r\n            Export to PDF\r\n          </Button>\r\n        </div>\r\n        <Table responsive bordered hover id=\"table-to-export\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Name</th>\r\n              <th>Student's number</th>\r\n              {headers}\r\n              <th>Presence in total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{students}</tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PresenceSummary;\r\n","import React from \"react\";\r\nimport \"../../styles/lecture.sass\";\r\nimport { Link } from \"react-scroll\";\r\nimport { Spinner, Button } from \"react-bootstrap\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport LecturePresence from \"./LecturePresence\";\r\nimport PresenceSummary from \"./PresenceSummary\";\r\nimport ApiServiceMock from \"../../services/api.mock.service\";\r\n\r\nclass CourseView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this._auth = new AuthService();\r\n    this._apiMock = new ApiServiceMock();\r\n\r\n    this.state = {\r\n      url: \"http://25.23.181.97:8090\",\r\n      overviewData: null,\r\n      courseOverviewClicked: false,\r\n      isLoadingOverview: true,\r\n      presenceLoading: true,\r\n    };\r\n    this.onBackClick = this.onBackClick.bind(this);\r\n    this.onLectureClick = this.onLectureClick.bind(this);\r\n    this.onOverviewClick = this.onOverviewClick.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.courseId !== prevProps.courseId) {\r\n      this.setState({\r\n        courseOverviewClicked: false,\r\n        isLoadingOverview: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  onBackClick() {\r\n    this.props.eraseLecture();\r\n    this.setState({\r\n      courseOverviewClicked: false,\r\n      isLoadingOverview: true,\r\n    });\r\n  }\r\n\r\n  onLectureClick(data, index, event) {\r\n    this.onLectureClickMockup(data, index);\r\n\r\n    /*this.props.changeLecture(data.id);\r\n\r\n    this._auth\r\n      .fetch(this.state.url + \"/api/lectures/\" + data.id + \"/details\", {\r\n        method: \"GET\",\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          lectureIndex: index + 1,\r\n          presenceData: res,\r\n          presenceLoading: false,\r\n        });\r\n      });*/\r\n  }\r\n\r\n  onOverviewClick() {\r\n    this.onOverviewClickMockup();\r\n    /*this._auth\r\n      .fetch(\r\n        this.state.url +\r\n          \"/api/courses/\" +\r\n          this.props.courseData.courseId +\r\n          \"/summary\",\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          overviewData: res,\r\n          courseOverviewClicked: true,\r\n          isLoadingOverview: false,\r\n        });\r\n      });*/\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isLoading && !this.props.courseData) {\r\n      return (\r\n        <div className=\"noselect-wrap center\">\r\n          <span className=\"noselect-info\">\r\n            Select course from sidebar menu to see its details!\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.props.isLoading) {\r\n      return (\r\n        <div className=\"spinner-wrap center\">\r\n          <Spinner animation=\"border\" variant=\"primary\" role=\"status\"></Spinner>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let lectures = this.props.lectures.lectures.map((data, index) => {\r\n      let dateT = new Date(data.date.replace(\" at \", \"T\"));\r\n      let dateS =\r\n        \"\" +\r\n        (\"0\" + dateT.getDate()).slice(-2) +\r\n        \"-\" +\r\n        (\"0\" + (dateT.getMonth() + 1)).slice(-2) +\r\n        \"-\" +\r\n        dateT.getFullYear() +\r\n        \" \";\r\n      let hour =\r\n        \"\" +\r\n        (\"0\" + dateT.getHours()).slice(-2) +\r\n        \":\" +\r\n        (\"0\" + dateT.getMinutes()).slice(-2);\r\n      return (\r\n        <Link\r\n          className=\"lecture-elem\"\r\n          to=\"\"\r\n          key={index}\r\n          onClick={this.onLectureClick.bind(null, data, index)}\r\n        >\r\n          <p>\r\n            Lecture {index + 1} <span className=\"lecture-hour\">{hour}</span>\r\n            <span className=\"lecture-date\">{dateS}</span>\r\n          </p>\r\n        </Link>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"course-name slope slope3\">\r\n          {this.props.lectures.name}\r\n        </div>\r\n        <div className=\"course-code slope slope4\">\r\n          {this.props.courseData.courseCode}\r\n        </div>\r\n        <div className=\"lecture-list\">\r\n          {this.props.lectureId === -1 && !this.state.courseOverviewClicked && (\r\n            <div>\r\n              <Button variant=\"info\" onClick={this.onOverviewClick.bind(null)}>\r\n                Course overview\r\n              </Button>\r\n              {lectures}\r\n            </div>\r\n          )}\r\n        </div>\r\n        {this.props.lectureId !== -1 && (\r\n          <div className=\"presence-wrap\">\r\n            <div className=\"btn-wrap\">\r\n              <Button variant=\"secondary\" onClick={this.onBackClick}>\r\n                Back\r\n              </Button>\r\n            </div>\r\n            <LecturePresence\r\n              courseName={this.props.lectures.name}\r\n              courseData={this.props.courseData}\r\n              lectureIndex={this.state.lectureIndex}\r\n              presenceData={this.state.presenceData}\r\n              isLoading={this.state.presenceLoading}\r\n            />\r\n          </div>\r\n        )}\r\n        {this.props.lectureId === -1 && this.state.courseOverviewClicked && (\r\n          <div className=\"presence-wrap\">\r\n            <div className=\"btn-wrap\">\r\n              <Button variant=\"secondary\" onClick={this.onBackClick}>\r\n                Back\r\n              </Button>\r\n            </div>\r\n            <PresenceSummary\r\n              courseName={this.props.lectures.name}\r\n              courseData={this.props.courseData}\r\n              overviewData={this.state.overviewData}\r\n              isLoading={this.state.isLoadingOverview}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onLectureClickMockup(data, index) {\r\n    this.props.changeLecture(data.id);\r\n    this._apiMock.getLecturesDetails().then((res) => {\r\n      this.setState({\r\n        lectureIndex: index + 1,\r\n        presenceData: res,\r\n        presenceLoading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  onOverviewClickMockup() {\r\n    this._apiMock.getCoursesSummary().then((res) => {\r\n      this.setState({\r\n        overviewData: res,\r\n        courseOverviewClicked: true,\r\n        isLoadingOverview: false,\r\n      });\r\n    });\r\n  }\r\n}\r\nexport default CourseView;\r\n","import React from \"react\";\r\nimport { Spinner, Table } from \"react-bootstrap\";\r\nimport \"../../styles/schedule.sass\";\r\n\r\nconst dummyDay = \"2000-01-01T\";\r\nconst colors = [\"#f2fac2\", \"#c4fada\", \"#fde0ed\", \"#b0c0c0\", \"#cbf0f0\"];\r\n\r\nclass WeekSchedule extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let hours = [];\r\n\r\n    for (let i = 7; i < 22; i++) {\r\n      let hour = (\"0\" + i).slice(-2) + \":00\";\r\n      hours.push(new Date(dummyDay + hour));\r\n    }\r\n    this.state = {\r\n      hoursD: hours,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.scheduleData !== null) {\r\n      let i = 0;\r\n      this.props.scheduleData.schedule.forEach((day) => {\r\n        day.lectures.forEach((lect) => {\r\n          let tempDate = new Date(dummyDay + lect.time);\r\n\r\n          let blockId = \"lectureD\" + i + \"H\" + tempDate.getHours();\r\n          let block = document.getElementById(blockId);\r\n\r\n          let value = (100 * lect.duration) / 60;\r\n          let startMinutesDiff = (100 * tempDate.getMinutes()) / 60;\r\n\r\n          block.style.top =\r\n            tempDate.getMinutes() > 0 ? startMinutesDiff + \"%\" : \"0\";\r\n          block.style.height = \"\" + value + \"%\";\r\n          block.style.background =\r\n            colors[Math.floor(Math.random() * colors.length)];\r\n\r\n          let endHourTemp =\r\n            (tempDate.getHours() * 60 + tempDate.getMinutes() + lect.duration) /\r\n            60;\r\n\r\n          let minutes = (endHourTemp - Math.floor(endHourTemp)) * 60;\r\n\r\n          let endHour =\r\n            \"\" +\r\n            Math.floor(endHourTemp) +\r\n            \":\" +\r\n            (\"0\" + Math.ceil(minutes)).slice(-2);\r\n\r\n          block.innerHTML =\r\n            \"<p>\" +\r\n            lect.course.slice(0, 20) +\r\n            \"...\" +\r\n            \"</p><p>\" +\r\n            lect.building +\r\n            \" \" +\r\n            lect.room +\r\n            \"</p><p>\" +\r\n            lect.time +\r\n            \"-\" +\r\n            endHour +\r\n            \"</p>\";\r\n        });\r\n        i++;\r\n      });\r\n    }\r\n  }\r\n\r\n  isLecture(lectures, hour) {\r\n    for (let i = 0; i < lectures.length; i++) {\r\n      let lecHour = new Date(dummyDay + lectures[i].time).getHours();\r\n      if (hour.getHours() === lecHour) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.isLoading) {\r\n      return (\r\n        <div className=\"spinner-wrap center\">\r\n          <Spinner animation=\"border\" variant=\"primary\" role=\"status\"></Spinner>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let days = this.props.scheduleData.schedule.map((data, index) => {\r\n      return <th key={index}>{data.day}</th>;\r\n    });\r\n\r\n    let hoursList = this.state.hoursD.map((hour, i) => {\r\n      let hourS =\r\n        \"\" +\r\n        (\"0\" + hour.getHours()).slice(-2) +\r\n        \":\" +\r\n        (\"0\" + hour.getMinutes()).slice(-2);\r\n      return (\r\n        <tr key={i}>\r\n          <td className=\"hour\">{hourS}</td>\r\n          {this.props.scheduleData.schedule.map((data, index) => {\r\n            return (\r\n              <td key={index}>\r\n                {this.isLecture(data.lectures, hour) ? (\r\n                  <div\r\n                    id={\"lectureD\" + index + \"H\" + hour.getHours()}\r\n                    className=\"lecture-block\"\r\n                  ></div>\r\n                ) : (\r\n                  \" \"\r\n                )}\r\n              </td>\r\n            );\r\n          })}\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"schedule-wrap\">\r\n        <Table responsive bordered>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"hour\">Hour</th>\r\n              {days}\r\n            </tr>\r\n          </thead>\r\n          <tbody>{hoursList}</tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default WeekSchedule;\r\n","const monthNames = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\"\r\n];\r\nconst dayNames = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\"\r\n];\r\n\r\nexport default class DataService {\r\n  constructor() {\r\n    this.getMonthName = this.getMonthName.bind(this);\r\n    this.getDayName = this.getDayName.bind(this);\r\n  }\r\n\r\n  getMonthName(index) {\r\n    return monthNames[index];\r\n  }\r\n\r\n  getDayName(index) {\r\n    return dayNames[index];\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../../styles/dashboard.sass\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { Link } from \"react-scroll\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport ApiServiceMock from \"../../services/api.mock.service\";\r\nimport CourseView from \"./CourseView\";\r\nimport WeekSchedule from \"./WeekSchedule\";\r\nimport DataService from \"../../services/data.service\";\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this._auth = new AuthService();\r\n    this._apiMock = new ApiServiceMock();\r\n    this._data = new DataService();\r\n\r\n    this.state = {\r\n      url: \"http://25.23.181.97:8090\",\r\n      lecturer_id: this._auth.getUserId(this._auth.getToken()),\r\n      loggedName: this._auth.getName(this._auth.getToken()),\r\n      lecturesLoading: false,\r\n      coursesLoading: true,\r\n      scheduleLoading: true,\r\n      courses: [],\r\n      lectures: [],\r\n      courseData: null,\r\n      scheduleData: null,\r\n      dateString: \"\",\r\n    };\r\n\r\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n    this.handleLecturesForCourse = this.handleLecturesForCourse.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataInitMockup(); //since it's a demo version the api calls are simulated with mockup data previously saved from the acctual api and db\r\n\r\n    /*this._auth\r\n      .fetch(\r\n        this.state.url +\r\n          \"/api/lecturers/\" +\r\n          this.state.lecturer_id +\r\n          \"/courses\",\r\n        { method: \"GET\" }\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          courses: res.courses,\r\n          coursesLoading: false,\r\n        });\r\n      });\r\n\r\n    this._auth\r\n      .fetch(\r\n        this.state.url +\r\n          \"/api/lecturers/\" +\r\n          this.state.lecturer_id +\r\n          \"/schedule\",\r\n        { method: \"GET\" }\r\n      )\r\n      .then((res) => {\r\n        let date1 = new Date(res.schedule[0].date);\r\n        let date2 = new Date(res.schedule[6].date);\r\n        let date =\r\n          (\"0\" + date1.getDate()).slice(-2) +\r\n          \" \" +\r\n          this._data.getMonthName(date1.getMonth()) +\r\n          \" - \" +\r\n          (\"0\" + date2.getDate()).slice(-2) +\r\n          \" \" +\r\n          this._data.getMonthName(date2.getMonth());\r\n        this.setState({\r\n          scheduleData: res,\r\n          scheduleLoading: false,\r\n          dateString: date,\r\n        });\r\n      });*/\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.courseId !== prevProps.courseId) {\r\n      this.setState({\r\n        lecturesLoading: true,\r\n      });\r\n      if (this.props.courseId !== -1)\r\n        this.handleLecturesForCourseMockup(this.props.courseId);\r\n      //this.handleLecturesForCourse(this.props.courseId);\r\n    }\r\n  }\r\n\r\n  handleLogoutClick() {\r\n    this._auth.logout(localStorage.getItem(\"id\"), false).then((res) => {\r\n      this.props.history.replace(\"/login\");\r\n    });\r\n  }\r\n\r\n  getLecturesSet(course_id) {\r\n    for (let i = 0; i < this.state.courses.length; i++) {\r\n      if (this.state.courses[i].id === course_id) return this.state.courses[i];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  handleLecturesForCourse(course_id) {\r\n    let lecturesSet = this.getLecturesSet(course_id);\r\n    this._auth\r\n      .fetch(this.state.url + \"/api/courses/\" + course_id + \"/details\", {\r\n        method: \"GET\",\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          courseData: res,\r\n          lectures: lecturesSet,\r\n          lecturesLoading: false,\r\n        });\r\n        console.log(JSON.stringify(res));\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Sidebar\r\n          courses={this.state.courses}\r\n          loggedName={this.state.loggedName}\r\n          isLoading={this.state.coursesLoading}\r\n          courseId={this.props.courseId}\r\n          lectureId={this.props.lectureId}\r\n          changeCourse={this.props.changeCourse}\r\n          eraseCourse={this.props.eraseCourse}\r\n          changeLecture={this.props.changeLecture}\r\n          eraseLecture={this.props.eraseLecture}\r\n        />\r\n        <Container className=\"content\">\r\n          <Link className=\"btn-logout\" to=\"\" onClick={this.handleLogoutClick}>\r\n            <span>Logout</span>\r\n          </Link>\r\n          <div className=\"main-container\">\r\n            <div className=\"course-name slope slope3\">\r\n              {this.state.dateString}\r\n            </div>\r\n            <div className=\"course-code slope slope4\">Schedule</div>\r\n            {this.props.courseId !== -1 ? (\r\n              <CourseView\r\n                courseData={this.state.courseData}\r\n                lectures={this.state.lectures}\r\n                isLoading={this.state.lecturesLoading}\r\n                courseId={this.props.courseId}\r\n                lectureId={this.props.lectureId}\r\n                changeLecture={this.props.changeLecture}\r\n                eraseLecture={this.props.eraseLecture}\r\n              />\r\n            ) : (\r\n              <WeekSchedule\r\n                scheduleData={this.state.scheduleData}\r\n                isLoading={this.state.scheduleLoading}\r\n              />\r\n            )}\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getDataInitMockup() {\r\n    this._apiMock.getLecturersCourses().then((res) => {\r\n      this.setState({\r\n        courses: res.courses,\r\n        coursesLoading: false,\r\n      });\r\n    });\r\n\r\n    this._apiMock.getLecturersSchedule().then((res) => {\r\n      let date1 = new Date(res.schedule[0].date);\r\n      let date2 = new Date(res.schedule[6].date);\r\n      let date =\r\n        (\"0\" + date1.getDate()).slice(-2) +\r\n        \" \" +\r\n        this._data.getMonthName(date1.getMonth()) +\r\n        \" - \" +\r\n        (\"0\" + date2.getDate()).slice(-2) +\r\n        \" \" +\r\n        this._data.getMonthName(date2.getMonth());\r\n      this.setState({\r\n        scheduleData: res,\r\n        scheduleLoading: false,\r\n        dateString: date,\r\n      });\r\n    });\r\n  }\r\n\r\n  handleLecturesForCourseMockup(course_id) {\r\n    let lecturesSet = this.getLecturesSet(course_id);\r\n    this._apiMock.getCoursesDetails().then((res) => {\r\n      this.setState({\r\n        courseData: res,\r\n        lectures: lecturesSet,\r\n        lecturesLoading: false,\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import { connect } from \"react-redux\";\r\nimport withAuth from \"../../services/auth-guard.service\";\r\nimport {\r\n  changeCourse,\r\n  eraseCourse,\r\n  changeLecture,\r\n  eraseLecture,\r\n} from \"../../actions\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nconst mapDispatchToProps = {\r\n  changeCourse,\r\n  eraseCourse,\r\n  changeLecture,\r\n  eraseLecture,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    courseId: state.courseId,\r\n    lectureId: state.lectureId,\r\n  };\r\n};\r\n\r\nexport default withAuth(\r\n  connect(mapStateToProps, mapDispatchToProps)(Dashboard)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport AuthService from \"./auth.service\";\r\n\r\nexport default function withAuth(AuthComponent) {\r\n  const _auth = new AuthService();\r\n  return class AuthWrapped extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        user: null,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      if (!_auth.loggedIn()) {\r\n        this.props.history.replace(\"/login\");\r\n      } else {\r\n        try {\r\n          const profile = _auth.getName(_auth.getToken());\r\n          this.setState({\r\n            user: profile,\r\n          });\r\n        } catch (err) {\r\n          _auth.logout();\r\n          this.props.history.replace(\"/login\");\r\n        }\r\n      }\r\n    }\r\n\r\n    render() {\r\n      if (this.state.user) {\r\n        return (\r\n          <AuthComponent history={this.props.history} user={this.state.user} />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\nimport { HashRouter, Route, BrowserRouter, Redirect } from \"react-router-dom\";\nimport \"./App.sass\";\nimport Home from \"./components/Home/Home\";\nimport Dashboard from \"./components/Dashboard/Dashboard.container\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <main>\n          <HashRouter basename=\"/\">\n            <div>\n              <Route path=\"/login\" component={Home} />\n              <Route path=\"/dashboard\" component={Dashboard} />\n              <Route exact path=\"/\" component={Dashboard} />\n            </div>\n          </HashRouter>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const courseReducer = (state = -1, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_COURSE\":\r\n      return action.payload;\r\n    case \"ERASE_COURSE\":\r\n      return -1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default courseReducer;\r\n","const lectureReducer = (state = -1, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_LECTURE\":\r\n      return action.payload;\r\n    case \"ERASE_LECTURE\":\r\n      return -1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default lectureReducer;\r\n","const loggedReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"SIGN_IN\":\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default loggedReducer;\r\n","import courseReducer from \"./course\";\r\nimport lectureReducer from \"./lecture\";\r\nimport loggedReducer from \"./isLogged\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  courseId: courseReducer,\r\n  lectureId: lectureReducer,\r\n  islogged: loggedReducer,\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.sass\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport { Provider } from \"react-redux\";\n\nlet store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}